namespace models;

table PingBody {
    payload: [ubyte];
}

enum FieldType: int {
    Unknown = -1,
    Float,
    Integer,
    Unsigned,
    Boolean,
    String,
}

struct RowKey {
    series_id: uint64;
    timestamp: uint64;
}

table RowField {
    field_id: uint64;
    type: FieldType;
    value: [ubyte];
}

table Row {
    key: RowKey;
    fields: [RowField];
}

table Rows {
    rows: [Row];
}

table Tag {
    key: [ubyte];
    value: [ubyte];
}

table Field {
    name: [ubyte];
    type: FieldType;
    value: [ubyte];
}

table Point {
    db: [ubyte];
    table: [ubyte];
    tags: [Tag];
    fields: [Field];
    timestamp: int64;
}

table Points {
    database: [ubyte];
    points: [Point];
}

struct ColumnKey {
    series_id: uint64;
    field_id: uint64;
}

table ColumnKeys {
    column_keys: [ColumnKey];
}

table ColumnKeysWithRange {
    column_keys: [ColumnKey];
    min: int64;
    max: int64;
}
